setwd("~/R-for-Data-Science-and-Machine-Learning-with-NBICT-LAB-Batch-8/RDSML-Day-14 ðŸ‘‰ Histogram in R (Part-2)")
# Importing data sets
datast = read.csv("dataset.csv")
# Importing data sets
datast = read.csv("dataset.csv")
# Importing data sets
datast = read.csv("data.csv")
(ggplot2)
# Importing the library
library(ggplot2)
# Creating the basic histogram
ggplot(dataset, aes(x=weight))+
geom_histogram(color = "whit")
# Creating the basic histogram
ggplot(dataset, aes(x=weight))+
geom_histogram(color = "whit")
# Importing data sets
datast = read.csv("data.csv")
# Importing the library
library(ggplot2)
# Creating the basic histogram
ggplot(dataset, aes(x=weight))+
geom_histogram(color = "whit")
# Creating the basic histogram
ggplot(datast, aes(x=weight))+
geom_histogram(color = "whit")
# Creating the basic histogram
ggplot(datast, aes(x=weight))+
geom_histogram(color = "whit")
# Changing histogram plot colors by groups
ggplot(datast, aes(x=weight, fill = sex)) +
geom_histogram(color = "whit")
# Importing data sets
datast = read.csv("data.csv")
# Importing the library
library(ggplot2)
# Creating the basic histogram
ggplot(datast, aes(x=weight))+
geom_histogram(color = "whit")
# Changing histogram plot colors by groups
ggplot(datast, aes(x=weight, fill = sex)) +
geom_histogram(color = "whit")
View(datast)
# Changing histogram plot colors by groups
ggplot(datast, aes(x=weight, fill = sex)) +
geom_histogram(color = "whit")
# Changing histogram plot colors by groups
ggplot(datast, aes(x=weight, fill = sex)) +
geom_histogram(color = "whit",  alpha = 0.5)
# Creating the basic histogram
ggplot(datast, aes(x = weight)) +
geom_histogram(color ="white")
# Changing histogram plot colors by groups
ggplot(datast, aes(x = weight, fill =  sex)) +
geom_histogram(color ="white", alpha = 0.5, position = "identitry")
# Changing histogram plot colors by groups
ggplot(datast, aes(x = weight, fill = "sex")) +
geom_histogram(color ="white", alpha = 0.5, position = "dough")
# Changing histogram plot colors by groups
ggplot(datast, aes(x = weight, fill = "sex")) +
geom_histogram(color ="white", alpha = 0.5, position = "dough")
# Interleaved histogram
ggplot(datast, aes(x = weight, fill = "sex")) +
geom_histogram(color ="white", alpha = 0.5, position = "dough")+
theme(legend.position = "top")
# Changing histogram plot colors by groups
ggplot(datast, aes(x = weight, fill = "sex")) +
geom_histogram(color ="white", alpha = 0.5, position = "dodge")
# Interleaved histogram
ggplot(datast, aes(x = weight, fill = "sex")) +
geom_histogram(color ="white", alpha = 0.5, position = "dodge")+
theme(legend.position = "top")
# The plyr package is used to calculate
# the mean weight
install.packages("plyr")
# The plyr package is used to calculate
# the mean weight of each group
# install.packages("plyr")
library(plyr)
group_means = ddply(datast, 'sex', summarise, grp.mean = mean(weight))
group_means
# Adding mean lines
myplot = ggplot(datast, aes(x = weight, fill = "sex")) +
geom_histogram(color ="white", alpha = 0.5, position = "dodge")+
theme(legend.position = "top")
# Adding mean lines
myplot = ggplot(datast, aes(x = weight, fill = "sex")) +
geom_histogram(color ="white", alpha = 0.5, position = "dodge")+
geom_vline(data = group_means, aes(xintercept = grp.mean))
theme(legend.position = "top")
myplot = ggplot(datast, aes(x = weight, fill = "sex")) +
geom_histogram(color ="white", alpha = 0.5, position = "dodge")+
geom_vline(data = group_means, aes(xintercept = grp.mean))
theme(legend.position = "top")
myplot
myplot = ggplot(datast, aes(x = weight, fill = "sex")) +
geom_histogram(color ="white", alpha = 0.5, position = "dodge")+
geom_vline(data = group_means, aes(xintercept = grp.mean))+
theme(legend.position = "top")
myPlot = ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = "white", alpha = .5, position = "dodge") +
geom_vline(data = group_means, aes(xintercept = grp.mean, color = sex),
linetype = "dashed") +
theme(legend.position = "top")
myplot
myPlot = ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = "white", alpha = .5, position = "dodge") +
geom_vline(data = group_means, aes(xintercept = grp.mean, color = sex),
linetype = "dashed") +
theme(legend.position = "top")
# Importing the dataset
dataset = read.csv("data.csv")
# Importing the library
library(ggplot2)
# Creating the basic histogram
ggplot(dataset, aes(x = weight)) +
geom_histogram(color = "white")
# Changing histogram plot line colors by groups
ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = "white", alpha = .5, position = "identity")
# We can change the position adjustment
# to use for overlapping points on the layer.
# Possible values for the argument position are
# "identity", "stack", "dodge". Default value is "stack".
# Interleaved histograms
ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = "white", alpha = .5, position = "dodge") +
theme(legend.position = "top")
# The plyr package is used to calculate
# the mean weight of each group.
# install.packages("plyr")
library(plyr)
group_means = ddply(dataset, "sex", summarise, grp.mean = mean(weight))
group_means
# Adding mean lines
myPlot = ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = "white", alpha = .5, position = "dodge") +
geom_vline(data = group_means, aes(xintercept = grp.mean, color = sex),
linetype = "dashed") +
theme(legend.position = "top")
myPlot
# Using custom color palettes
myplot + scale_color_manual(values = c("red", "blue")) +
scale_fill_manual(values = c("green", "yellow"))
# Using custom color palettes
myplot + scale_color_manual(values = c("red", "blue")) +
scale_fill_manual(values = c("green", "orange"))
myPlot = ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = "white", alpha = .5, position = "dodge") +
geom_vline(data = group_means, aes(xintercept = grp.mean, color = sex),
linetype = "dashed") +
theme(legend.position = "top")
myPlot
# Using custom color palettes
myplot + scale_color_manual(values = c("red", "blue")) +
scale_fill_manual(values = c("green", "orange"))
myPlot = ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = "white", alpha = .5, position = "dodge") +
geom_vline(data = group_means, aes(xintercept = grp.mean, color = sex),
linetype = "dashed") +
theme(legend.position = "top")
myPlot = ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = "white", alpha = .5, position = "dodge") +
geom_vline(data = group_means, aes(xintercept = grp.mean, color = sex),
linetype = "dashed") +
theme(legend.position = "top")
myPlot = ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = "white", alpha = .5, position = "dodge") +
geom_vline(data = group_means, aes(xintercept = grp.mean, color = sex),
linetype = "dashed") +
theme(legend.position = "top")
myPlot = ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = "white", alpha = .5, position = "dodge") +
geom_vline(data = group_means, aes(xintercept = grp.mean, color = sex),
linetype = "dashed") +
theme(legend.position = "top")
# Using custom color palettes
myplot + scale_color_manual(values = c("#999999", "#E69F00")) +
scale_fill_manual(values = c("#999999", "#E69F00"))
# Using color brewer color palettes
myPlot + scale_color_brewer(palette = "Dark2") +
scale_fill_brewer(palette = "Derk2")
# Using color brewer color palettes
myPlot + scale_color_brewer(palette = "Paired") +
scale_fill_brewer(palette = "Derk2")
# Using custom color palettes
myplot + scale_color_manual(values = c("#999999", "#E69F00")) +
scale_fill_manual(values = c("red", "#E69F00"))
Dark2
Dark2
# Using color brewer color palettes
myPlot + scale_color_brewer(palette = "Dark2") +
scale_fill_brewer(palette = "Derk2")
# Using a grey scale
myPlot + scale_color_grey() + scale_fill_grey() +
theme_classic()
